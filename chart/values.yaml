global:
  domain: null
  imagePullSecret:
    {}
srv:
  bindings:
    service-manager:
      serviceInstanceName: service-manager
  image:
    repository: <your-container-registry>/po_deploy-srv
    tag: latest
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  health:
    liveness:
      path: /
    readiness:
      path: /
service-manager:
  serviceOfferingName: service-manager
  servicePlanName: container
saas-registry:
  serviceOfferingName: saas-registry
  servicePlanName: application
  parametersFrom:
    - secretKeyRef:
        name: "{{ .Release.Name }}-saas-registry-secret"
        key: parameters
saasRegistryParameters:
  xsappname: po_deploy
  appName: po_deploy
  displayName: po_deploy
  description: A simple CAP project.
  category: "CAP Application"
  bindSidecar: true
  appUrls:
    getDependencies: "/-/cds/saas-provisioning/dependencies"
    onSubscription: "/-/cds/saas-provisioning/tenant/{tenantId}"
    onSubscriptionAsync: true
    onUnSubscriptionAsync: true
    onUpdateDependenciesAsync: true
    callbackTimeoutMillis: 300000
sidecar:
  bindings:
    saas-registry:
      serviceInstanceName: saas-registry
    service-manager:
      serviceInstanceName: service-manager
  image:
    repository: <your-container-registry>/po_deploy-sidecar
    tag: latest
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  health:
    liveness:
      path: /
    readiness:
      path: /
  envFrom:
    - configMapRef:
        name: "{{ .Release.Name }}-mtxs-configmap"
